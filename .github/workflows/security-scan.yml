name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Order Service image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./services/order-service
        file: ./services/order-service/Dockerfile
        load: true
        tags: order-service:scan
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner - Order Service
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'order-service:scan'
        format: 'sarif'
        output: 'trivy-order-service.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy results to GitHub Security tab - Order Service
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-order-service.sarif'
        category: 'trivy-order-service'

    - name: Build Inventory Service image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./services/inventory-service
        file: ./services/inventory-service/Dockerfile
        load: true
        tags: inventory-service:scan
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner - Inventory Service
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'inventory-service:scan'
        format: 'sarif'
        output: 'trivy-inventory-service.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy results to GitHub Security tab - Inventory Service
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-inventory-service.sarif'
        category: 'trivy-inventory-service'

    - name: Build Notification Service image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./services/notification-service
        file: ./services/notification-service/Dockerfile
        load: true
        tags: notification-service:scan
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner - Notification Service
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'notification-service:scan'
        format: 'sarif'
        output: 'trivy-notification-service.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy results to GitHub Security tab - Notification Service
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-notification-service.sarif'
        category: 'trivy-notification-service'

    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-fs.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy filesystem results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-fs.sarif'
        category: 'trivy-filesystem'

  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build project
      run: mvn clean install -DskipTests

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/maven@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --all-projects

    - name: Upload Snyk results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: snyk.sarif
        category: 'snyk'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified
